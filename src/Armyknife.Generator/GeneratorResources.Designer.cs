//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Armyknife.Generator {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class GeneratorResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal GeneratorResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Armyknife.Generator.GeneratorResources", typeof(GeneratorResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System.Threading.Tasks;
        ///
        ///namespace Armyknife.Tests.Integration.Tools
        ///{
        ///   [TestClass]
        ///   public class [INTEGRATIONTESTCLASSNAME] : IntegrationTestBase
        ///   {
        ///      [TestMethod]
        ///      public async Task [TOOLCLASSNAME]_IntegrationTest()
        ///      {
        ///         // arrange
        ///         var args = GetArgs($&quot;[TOOLKEY] some input&quot;);
        ///         string expectedOutput = string.Empty;
        ///
        ///         // act
        ///         await Executor.ExecuteAsync(args);
        ///
        ///         //  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AsynchronousIntegrationTestTemplate {
            get {
                return ResourceManager.GetString("AsynchronousIntegrationTestTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Collections.Generic;
        ///using System.Threading.Tasks;
        ///using Armyknife.Exceptions;
        ///using Armyknife.Resources;
        ///using Armyknife.Models;
        ///using Armyknife.Business.Interfaces;
        ///
        ///namespace Armyknife.Tools.Implementations
        ///{
        ///   internal class [TOOLCLASSNAME] : I[TOOLTYPE]
        ///   {
        ///      public string Name =&gt; &quot;[TOOLKEY]&quot;;
        ///
        ///      public string Description =&gt; ToolResources.[TOOLNAME]Description;
        ///
        ///      public string Category =&gt; CategoryResources.[CATEGORYNAME]Category;
        ///
        ///      public string HelpTex [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AsynchronousToolTemplate {
            get {
                return ResourceManager.GetString("AsynchronousToolTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Armyknife.Exceptions;
        ///using Armyknife.Models;
        ///using Armyknife.Tools.Implementations;
        ///using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Threading.Tasks;
        ///
        ///namespace Armyknife.Tests.Tools.Implementations
        ///{
        ///   [TestClass]
        ///   public class [UNITTESTCLASSNAME]
        ///   {
        ///      private [TOOLCLASSNAME] _tool;
        ///
        ///      [TestInitialize]
        ///      public void Initialize()
        ///      {
        ///         _tool = new [TOOLCLASSNAME]();
        ///      }
        ///
        ///      [TestCle [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AsynchronousUnitTestTemplate {
            get {
                return ResourceManager.GetString("AsynchronousUnitTestTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System.Threading.Tasks;
        ///
        ///namespace Armyknife.Tests.Integration.Tools
        ///{
        ///   [TestClass]
        ///   public class [INTEGRATIONTESTCLASSNAME] : IntegrationTestBase
        ///   {
        ///      [TestMethod]
        ///      public async Task [TOOLCLASSNAME]_IntegrationTest()
        ///      {
        ///         // arrange
        ///         var args = GetArgs($&quot;[TOOLKEY] some input&quot;);
        ///         string expectedOutput = string.Empty;
        ///
        ///         // act
        ///         await Executor.ExecuteAsync(args);
        ///
        ///         //  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SynchronousIntegrationTestTemplate {
            get {
                return ResourceManager.GetString("SynchronousIntegrationTestTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Collections.Generic;
        ///using Armyknife.Exceptions;
        ///using Armyknife.Resources;
        ///using Armyknife.Models;
        ///using Armyknife.Business.Interfaces;
        ///
        ///namespace Armyknife.Tools.Implementations
        ///{
        ///   internal class [TOOLCLASSNAME] : I[TOOLTYPE]
        ///   {
        ///      public string Name =&gt; &quot;[TOOLKEY]&quot;;
        ///
        ///      public string Description =&gt; ToolResources.[TOOLNAME]Description;
        ///
        ///      public string Category =&gt; CategoryResources.[CATEGORYNAME]Category;
        ///
        ///      public string HelpText =&gt; ToolResources.[TOOLNAME]He [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SynchronousToolTemplate {
            get {
                return ResourceManager.GetString("SynchronousToolTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Armyknife.Exceptions;
        ///using Armyknife.Models;
        ///using Armyknife.Tools.Implementations;
        ///using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using System.Collections.Generic;
        ///
        ///namespace Armyknife.Tests.Tools.Implementations
        ///{
        ///   [TestClass]
        ///   public class [UNITTESTCLASSNAME]
        ///   {
        ///      private [TOOLCLASSNAME] _tool;
        ///
        ///      [TestInitialize]
        ///      public void Initialize()
        ///      {
        ///         _tool = new [TOOLCLASSNAME]();
        ///      }
        ///
        ///      [TestCleanup]
        ///      public void Cleanu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SynchronousUnitTestTemplate {
            get {
                return ResourceManager.GetString("SynchronousUnitTestTemplate", resourceCulture);
            }
        }
    }
}
